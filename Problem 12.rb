# Project Euler Problem: 12
# Highly Divisible Triangular Number
=begin 
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

					1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

	 1: 1
	 3: 1,3
	 6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
=end

require 'mathn'

class Integer
  def divisor_count
    sum = 1
    self.prime_division.each { |x| sum *= (x[1] + 1) }
    sum
  end
end

i, triangle_number = 1, 1

while(triangle_number.divisor_count <= 500)
  i += 1
  triangle_number += i
end
 
puts "The First Triangle Number To Have Over Five Hundred Divisors is: #{triangle_number}."